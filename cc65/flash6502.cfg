
SYMBOLS {
    _STDOUT: value = $FFF1, type = export;
    _STDERR: value = $FFF2, type = export;
    _HALT:   value = $FFF9, type = export;
}

MEMORY {
    ZP:        start =  $0000, size = $0100, fill = yes;
    CPUSTACK:  start =  $0100, size = $0100, fill = yes;
    RAM:       start =  $0200, size = $F600, fill = yes, define = yes;
    CTRL:      start =  $F800, size = $0800, fill = yes;
}

SEGMENTS {
    ZEROPAGE: load = ZP,   type = zp,  define   = yes;
    DATA:     load = RAM,  type = rw,  define   = yes;
    BSS:      load = RAM,  type = bss, define   = yes;
    STARTUP:  load = RAM,  type = ro;
    ONCE:     load = RAM,  type = ro,  optional = yes;
    CODE:     load = RAM,  type = ro;
    RODATA:   load = RAM,  type = ro;
    VECTORS:  load = CTRL, type = rw, start = $FFFA;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}

